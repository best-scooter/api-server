# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main", "development", "development2" ]
  pull_request:
    branches: [ "main", "development", "development2" ]
  workflow_dispatch:

env:
  NODE_ENV: ${{ vars.NODE_ENV }}
  PORT: ${{ vars.PORT }}
  JET_LOGGER_MODE: ${{ vars.JET_LOGGER_MODE }}
  JET_LOGGER_FILEPATH: ${{ vars.JET_LOGGER_FILEPATH }}
  JET_LOGGER_TIMESTAMP: ${{ vars.JET_LOGGER_TIMESTAMP }}
  JET_LOGGER_FORMAT: ${{ vars.JET_LOGGER_FORMAT }}
  DATABASE_SERVER: ${{ vars.DATABASE_SERVER }}
  DATABASE_DATABASE: ${{ vars.DATABASE_DATABASE }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
  OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
  APP_ID: ${{ secrets.APP_ID }}
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

jobs:
    build:

      runs-on: ubuntu-latest

      strategy:
          matrix:
              node-version: [20.x]
              mariadb-version: [11.2.2]
              # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      services:
        mariadb:
          image: docker.io/missivaeak/bestscooter-database
          ports:
            - 3306:3306
          options: --health-cmd="healthcheck.sh --defaults-file=healthcheck.cnf --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

      steps:
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install --production=false
      - name: Set up environment and run test
        run: |
          touch env/test.env
          echo NODE_ENV=$NODE_ENV >> env/test.env
          echo PORT=$PORT >> env/test.env
          echo JET_LOGGER_MODE=$JET_LOGGER_MODE >> env/test.env
          echo JET_LOGGER_FILEPATH=$JET_LOGGER_FILEPATH >> env/test.env
          echo JET_LOGGER_TIMESTAMP=$JET_LOGGER_TIMESTAMP >> env/test.env
          echo JET_LOGGER_FORMAT=$JET_LOGGER_FORMAT >> env/test.env
          echo DATABASE_SERVER=$DATABASE_SERVER >> env/test.env
          echo DATABASE_DATABASE=$DATABASE_DATABASE >> env/test.env
          echo DATABASE_USERNAME=$DATABASE_USERNAME >> env/test.env
          echo DATABASE_PASSWORD=$DATABASE_PASSWORD >> env/test.env
          echo JWT_SECRET=$JWT_SECRET >> env/test.env
          echo OAUTH_CLIENT_ID=$OAUTH_CLIENT_ID >> env/test.env
          echo OAUTH_CLIENT_SECRET=$OAUTH_CLIENT_SECRET >> env/test.env
          echo GITHUB_APP_ID=$APP_ID >> env/test.env
          echo GITHUB_PRIVATE_KEY=$PRIVATE_KEY >> env/test.env
          cp env/test.env env/development.env
          npm run test:no-reloading
